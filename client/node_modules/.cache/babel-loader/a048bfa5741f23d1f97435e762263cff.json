{"ast":null,"code":"import _defineProperty from \"/home/mat/Projects/react-apps/reacte-commerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport CartActionTypes from \"./cart-types\";\nimport { addItemToCart } from './cart.utils';\nconst initialState = {\n  hidden: true,\n  cartItems: [{\n    id: 1,\n    name: 'Brown Brim',\n    imageUrl: 'https://i.ibb.co/ZYW3VTp/brown-brim.png',\n    price: 25,\n    quantity: 4\n  }]\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOOGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/redux/cart/cart-reducer.jsx"],"names":["CartActionTypes","addItemToCart","initialState","hidden","cartItems","id","name","imageUrl","price","quantity","cartReducer","state","action","type","TOOGLE_CART_HIDDEN","ADD_ITEM","payload"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,aAAR,QAA4B,cAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,QAAQ,EAAE,yCAHZ;AAIEC,IAAAA,KAAK,EAAE,EAJT;AAKEC,IAAAA,QAAQ,EAAE;AALZ,GADS;AAFQ,CAArB;;AAaA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,eAAe,CAACc,kBAArB;AACE,+BACKH,KADL;AAEER,QAAAA,MAAM,EAAE,CAACQ,KAAK,CAACR;AAFjB;;AAKA,SAAKH,eAAe,CAACe,QAArB;AACE,+BACKJ,KADL;AAEEP,QAAAA,SAAS,EAAEH,aAAa,CAACU,KAAK,CAACP,SAAP,EAAkBQ,MAAM,CAACI,OAAzB;AAF1B;;AAKJ;AACE,+BACKL,KADL;AAdJ;AAkBD,CAnBD;;AAqBA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from \"./cart-types\";\nimport {addItemToCart} from './cart.utils';\n\nconst initialState = {\n  hidden: true,\n  cartItems: [\n    {\n      id: 1,\n      name: 'Brown Brim',\n      imageUrl: 'https://i.ibb.co/ZYW3VTp/brown-brim.png',\n      price: 25,\n      quantity: 4\n    }\n  ]\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOOGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      };\n    \n      case CartActionTypes.ADD_ITEM:\n        return {\n          ...state,\n          cartItems: addItemToCart(state.cartItems, action.payload)\n        }\n\n    default:\n      return {\n        ...state\n      };\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}