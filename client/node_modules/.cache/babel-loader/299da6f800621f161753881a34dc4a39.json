{"ast":null,"code":"import _defineProperty from \"/home/mat/Projects/react-apps/reacte-commerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/mat/Projects/react-apps/reacte-commerce/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mat/Projects/react-apps/reacte-commerce/src/components/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Button from \"../button/button.component\";\nimport FormImput from \"../form-input/form-input\";\nimport { SignUpContainer } from \"./sign-up.styles\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nconst SignUp = ({\n  signUp\n}) => {\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCrendentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const displayName = userCrendentials.displayName,\n          email = userCrendentials.email,\n          password = userCrendentials.password,\n          confirmPassword = userCrendentials.confirmPassword;\n\n    if (password !== confirmPassword) {\n      alert(\"Password does not match.\");\n      return;\n    }\n\n    signUp({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setCredentials(prevState => _objectSpread({}, prevState, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(FormImput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(FormImput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(FormImput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(FormImput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUp: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","Button","FormImput","SignUpContainer","connect","signUpStart","SignUp","signUp","displayName","email","password","confirmPassword","userCrendentials","setCredentials","handleSubmit","e","preventDefault","alert","handleChange","target","name","value","prevState","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../button/button.component\";\nimport FormImput from \"../form-input/form-input\";\nimport { SignUpContainer } from \"./sign-up.styles\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nconst SignUp = ({ signUp }) => {\n  const [userCrendentials, setCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const { displayName, email, password, confirmPassword } = userCrendentials;\n\n    if (password !== confirmPassword) {\n      alert(\"Password does not match.\");\n      return;\n    }\n\n    signUp({ displayName, email, password });\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setCredentials(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  return (\n    <SignUpContainer>\n      <h3>I do not have a account</h3>\n      <span>Sign up with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormImput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n\n        <FormImput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"Email\"\n          required\n        />\n\n        <FormImput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"Password\"\n          required\n        />\n\n        <FormImput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleChange}\n          label=\"Confirm password\"\n          required\n        />\n\n        <Button type=\"submit\">SIGN UP</Button>\n      </form>\n    </SignUpContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUp: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignUp);\n"]},"metadata":{},"sourceType":"module"}