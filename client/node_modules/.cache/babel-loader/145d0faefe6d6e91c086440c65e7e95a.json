{"ast":null,"code":"import _defineProperty from \"/home/mat/Projects/react-apps/reacte-commerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/mat/Projects/react-apps/reacte-commerce/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mat/Projects/react-apps/reacte-commerce/src/components/sign-in/sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input\";\nimport Button from \"../button/button.component\";\nimport { SignInContainer, ButtonsContainer } from \"./sign-in.styles\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\nimport \"\";\n\nconst SignIn = ({\n  onGoogleSignIn,\n  onEmailAndPasswordSignIn\n}) => {\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name; // console.log(value, name);\n\n    setState(prevState => _objectSpread({}, prevState, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const email = state.email,\n          password = state.password;\n    console.log(email, password); // onEmailAndPasswordSignIn(email, password);\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: state.email,\n    handleChange: handleChange,\n    required: true,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: state.password,\n    handleChange: handleChange,\n    required: true,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(ButtonsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"SIGN IN\"), React.createElement(Button, {\n    type: \"button\",\n    isGoogleSignIn: true,\n    onClick: onGoogleSignIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"SIGN IN WITH GOOGLE\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onGoogleSignIn: () => dispatch(googleSignInStart()),\n  onEmailAndPasswordSignIn: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","Button","SignInContainer","ButtonsContainer","googleSignInStart","emailSignInStart","connect","SignIn","onGoogleSignIn","onEmailAndPasswordSignIn","email","password","state","setState","handleChange","e","target","value","name","prevState","handleSubmit","preventDefault","console","log","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input\";\nimport Button from \"../button/button.component\";\nimport { SignInContainer, ButtonsContainer } from \"./sign-in.styles\";\nimport {\n  googleSignInStart,\n  emailSignInStart\n} from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\nimport {} from \"\";\n\nconst SignIn = ({ onGoogleSignIn, onEmailAndPasswordSignIn }) => {\n\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n    // console.log(value, name);\n    setState( prevState => ({\n        ...prevState,\n        [name] : value\n    }))\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const { email, password } = state;\n\n    console.log(email, password)\n    // onEmailAndPasswordSignIn(email, password);\n  };\n\n  return (\n    <SignInContainer>\n      <h2>I already have an account</h2>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={state.email}\n          handleChange={handleChange}\n          required\n          label=\"Email\"\n        />\n\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={state.password}\n          handleChange={handleChange}\n          required\n          label=\"Password\"\n        />\n\n        <ButtonsContainer>\n          <Button type=\"submit\">SIGN IN</Button>\n          <Button type=\"button\" isGoogleSignIn onClick={onGoogleSignIn}>\n            SIGN IN WITH GOOGLE\n          </Button>\n        </ButtonsContainer>\n      </form>\n    </SignInContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onGoogleSignIn: () => dispatch(googleSignInStart()),\n  onEmailAndPasswordSignIn: (email, password) =>\n    dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignIn);\n"]},"metadata":{},"sourceType":"module"}