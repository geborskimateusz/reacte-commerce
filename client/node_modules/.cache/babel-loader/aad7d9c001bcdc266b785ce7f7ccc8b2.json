{"ast":null,"code":"var _jsxFileName = \"/home/mat/Projects/react-apps/reacte-commerce/src/components/sign-in/sign-in.component.jsx\";\nimport React from \"react\"; // import \"./sign-in.styles.scss\";\n\nimport FormInput from \"../form-input/form-input\";\nimport Button from \"../button/button.component\";\nimport { signInWithGoogle } from \"../../firebase/firebase.utils\";\nimport { auth } from \"../../firebase/firebase.utils\";\nimport { SignInContainer, ButtonsContainer } from \"./sign-in.styles\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            value = _e$target.value,\n            name = _e$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const onEmailAndPasswordSignIn = this.props.onEmailAndPasswordSignIn;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      onEmailAndPasswordSignIn(email, password);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const onGoogleSignIn = this.props.onGoogleSignIn;\n    return React.createElement(SignInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      required: true,\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      required: true,\n      label: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(ButtonsContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"SIGN IN\"), React.createElement(Button, {\n      type: \"button\",\n      isGoogleSignIn: true,\n      onClick: onGoogleSignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"SIGN IN WITH GOOGLE\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onGoogleSignIn: () => dispatch(googleSignInStart()),\n  onEmailAndPasswordSignIn: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","Button","signInWithGoogle","auth","SignInContainer","ButtonsContainer","googleSignInStart","emailSignInStart","connect","SignIn","Component","constructor","props","handleChange","e","target","value","name","setState","handleSubmit","preventDefault","onEmailAndPasswordSignIn","state","email","password","render","onGoogleSignIn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import \"./sign-in.styles.scss\";\nimport FormInput from \"../form-input/form-input\";\nimport Button from \"../button/button.component\";\nimport { signInWithGoogle } from \"../../firebase/firebase.utils\";\nimport { auth } from \"../../firebase/firebase.utils\";\nimport { SignInContainer, ButtonsContainer } from \"./sign-in.styles\";\nimport {\n  googleSignInStart,\n  emailSignInStart\n} from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = e => {\n    const { value, name } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    const { onEmailAndPasswordSignIn } = this.props;\n    const { email, password } = this.state;\n\n    onEmailAndPasswordSignIn(email, password);\n  };\n\n  render() {\n    const { onGoogleSignIn } = this.props;\n\n    return (\n      <SignInContainer>\n        <h2>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            value={this.state.email}\n            handleChange={this.handleChange}\n            required\n            label=\"Email\"\n          />\n\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            handleChange={this.handleChange}\n            required\n            label=\"Password\"\n          />\n\n          <ButtonsContainer>\n            <Button type=\"submit\">SIGN IN</Button>\n            <Button type=\"button\" isGoogleSignIn onClick={onGoogleSignIn}>\n              SIGN IN WITH GOOGLE\n            </Button>\n          </ButtonsContainer>\n        </form>\n      </SignInContainer>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onGoogleSignIn: () => dispatch(googleSignInStart()),\n  onEmailAndPasswordSignIn: (email, password) =>\n    dispatch(emailSignInStart({email, password}))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignIn);\n"]},"metadata":{},"sourceType":"module"}