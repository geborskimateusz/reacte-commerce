{"ast":null,"code":"import _defineProperty from \"/home/mat/Projects/react-apps/reacte-commerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDoc } from '../../firebase/firebase.utils';\nimport { signInSucces, signInFailure } from './user.actions';\nimport { all, call } from 'redux-saga/effects';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDoc, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSucces(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    put(signInFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmailAndPassword({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    put(signInFailure(err));\n  }\n}\nexport function* onEmailAndPasswordSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmailAndPassword);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailAndPasswordSignInStart)]);\n}","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","UserActionTypes","googleProvider","auth","createUserProfileDoc","signInSucces","signInFailure","all","call","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","err","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmailAndPassword","payload","email","password","onEmailAndPasswordSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,oBAA/B,QAA2D,+BAA3D;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4CC,cAA5C,EAA4D;AAC/D,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMJ,IAAI,CACtBJ,oBADsB,EAEtBM,QAFsB,EAGtBC,cAHsB,CAA1B;AAKA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACK,YAAY;AAAGU,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAb,CAAT;AACH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAEhC,MAAI;AAAA,iBAEiB,MAAMf,IAAI,CAACgB,eAAL,CAAqBjB,cAArB,CAFvB;AAAA,UAEQkB,IAFR,QAEQA,IAFR;;AAGA,UAAMX,uBAAuB,CAACW,IAAD,CAA7B;AAEH,GALD,CAKE,OAAOC,GAAP,EAAY;AACVrB,IAAAA,GAAG,CAACM,aAAa,CAACe,GAAD,CAAd,CAAH;AACH;AAEJ;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMvB,UAAU,CAACE,eAAe,CAACsB,oBAAjB,EAAuCL,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUM,0BAAV,CAAqC;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAArC,EAAuE;AAE1E,MAAI;AAAA,kBAEiB,MAAMxB,IAAI,CAACqB,0BAAL,CAAgCE,KAAhC,EAAuCC,QAAvC,CAFvB;AAAA,UAEQP,IAFR,SAEQA,IAFR;;AAGA,UAAMX,uBAAuB,CAACW,IAAD,CAA7B;AAEH,GALD,CAKE,OAAOC,GAAP,EAAY;AACVrB,IAAAA,GAAG,CAACM,aAAa,CAACe,GAAD,CAAd,CAAH;AACH;AACJ;AAED,OAAO,UAAUO,6BAAV,GAA0C;AAC7C,QAAM7B,UAAU,CAACE,eAAe,CAAC4B,mBAAjB,EAAsCL,0BAAtC,CAAhB;AACH;AAGD,OAAO,UAAUM,SAAV,GAAsB;AACzB,QAAMvB,GAAG,CAAC,CACNC,IAAI,CAACc,mBAAD,CADE,EAENd,IAAI,CAACoB,6BAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { takeLatest, put } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDoc } from '../../firebase/firebase.utils';\nimport { signInSucces, signInFailure } from './user.actions';\nimport { all, call } from 'redux-saga/effects';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n        const userRef = yield call(\n            createUserProfileDoc,\n            userAuth,\n            additionalData\n        );\n        const userSnapshot = yield userRef.get();\n        yield put(signInSucces({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithGoogle() {\n\n    try {\n\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n\n    } catch (err) {\n        put(signInFailure(err))\n    }\n\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* signInWithEmailAndPassword({ payload: { email, password } }) {\n\n    try {\n\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n\n    } catch (err) {\n        put(signInFailure(err))\n    }\n}\n\nexport function* onEmailAndPasswordSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmailAndPassword)\n}\n\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailAndPasswordSignInStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}