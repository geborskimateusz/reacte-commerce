{"ast":null,"code":"var _jsxFileName = \"/home/mat/Projects/react-apps/reacte-commerce/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from 'react-redux';\nimport { setCollections } from '../../redux/shop/shop.actions';\nimport { firestore } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const setCollections = this.props.setCollections;\n    const docRef = firestore.collection(\"collections\");\n    console.log(docRef);\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:routeName\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCollections: collections => dispatch(setCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","createStructuredSelector","connect","setCollections","firestore","ShopPage","Component","constructor","props","componentDidMount","docRef","collection","console","log","render","match","path","mapDispatchToProps","dispatch","collections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,cAAR,QAA6B,+BAA7B;AACA,SAAQC,SAAR,QAAwB,+BAAxB;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAAA,UACXN,cADW,GACO,KAAKK,KADZ,CACXL,cADW;AAGlB,UAAMO,MAAM,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAf;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAED;;AAEDI,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKP,KADhB,CACCO,KADD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAElB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKiB,KAAK,CAACC,IAAX,gBAAX;AAAyC,MAAA,SAAS,EAAEhB,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAvBoC;;AA2BvC,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCf,EAAAA,cAAc,EAAEgB,WAAW,IAAID,QAAQ,CAACf,cAAc,CAACgB,WAAD,CAAf;AADD,CAAL,CAAnC;;AAIA,eAAejB,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCZ,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from 'react-redux';\nimport {setCollections} from '../../redux/shop/shop.actions';\nimport {firestore} from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const {setCollections} = this.props;\n\n    const docRef = firestore.collection(\"collections\");\n\n    console.log(docRef)\n\n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:routeName`} component={CollectionPage} />\n      </div>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n  setCollections: collections => dispatch(setCollections(collections))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}