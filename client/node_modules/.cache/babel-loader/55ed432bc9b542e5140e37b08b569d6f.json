{"ast":null,"code":"var _jsxFileName = \"/home/mat/Projects/react-apps/reacte-commerce/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { setCollections } from \"../../redux/shop/shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { get } from \"http\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  async componentDidMount() {\n    const setCollections = this.props.setCollections;\n    const collectionsRef = firestore.collection(\"collections\");\n    collectionsRef.onSnapshot(snapshot => convertCollectionsSnapshotToMap(snapshot));\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:routeName\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCollections: collections => dispatch(setCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","createStructuredSelector","connect","setCollections","firestore","convertCollectionsSnapshotToMap","get","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","props","collectionsRef","collection","onSnapshot","snapshot","render","match","path","mapDispatchToProps","dispatch","collections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,GAAT,QAAoB,MAApB;;AAEA,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCC,uBAFqC,GAEX,IAFW;AAAA;;AAIrC,QAAMC,iBAAN,GAA0B;AAAA,UAChBP,cADgB,GACG,KAAKQ,KADR,CAChBR,cADgB;AAGxB,UAAMS,cAAc,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAvB;AAEAD,IAAAA,cAAc,CAACE,UAAf,CAA0BC,QAAQ,IAAKV,+BAA+B,CAACU,QAAD,CAAtE;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKN,KADhB,CACCM,KADD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEpB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKmB,KAAK,CAACC,IAAX,gBAAX;AAAyC,MAAA,SAAS,EAAElB,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAzBoC;;AA4BvC,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCjB,EAAAA,cAAc,EAAEkB,WAAW,IAAID,QAAQ,CAACjB,cAAc,CAACkB,WAAD,CAAf;AADD,CAAL,CAAnC;;AAIA,eAAenB,OAAO,CACpB,IADoB,EAEpBiB,kBAFoB,CAAP,CAGbZ,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { setCollections } from \"../../redux/shop/shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { get } from \"http\";\n\nclass ShopPage extends React.Component {\n \n  unsubscribeFromSnapshot = null;\n\n  async componentDidMount() {\n    const { setCollections } = this.props;\n\n    const collectionsRef = firestore.collection(\"collections\");\n\n    collectionsRef.onSnapshot(snapshot =>  convertCollectionsSnapshotToMap(snapshot));\n\n    \n    \n    \n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:routeName`} component={CollectionPage} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCollections: collections => dispatch(setCollections(collections))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}