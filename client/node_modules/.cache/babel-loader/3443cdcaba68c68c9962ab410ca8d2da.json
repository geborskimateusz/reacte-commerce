{"ast":null,"code":"import _defineProperty from \"/home/mat/Projects/react-apps/reacte-commerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDoc } from '../../firebase/firebase.utils';\nimport { googleSignInFailure, googleSignInSucces, emailSignInSucces, emailSignInFailure } from './user.actions';\nimport { all, call } from 'redux-saga/effects';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDoc, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSucces(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    put(googleSignInFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmailAndPassword({\n  payload: {\n    email,\n    password\n  }\n}) {\n  yield console.log(payload);\n\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDoc, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSucces(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    put(emailSignInFailure(err));\n  }\n}\nexport function* onEmailAndPasswordSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmailAndPassword);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailAndPasswordSignInStart)]);\n}","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","UserActionTypes","googleProvider","auth","createUserProfileDoc","googleSignInFailure","googleSignInSucces","emailSignInSucces","emailSignInFailure","all","call","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","err","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmailAndPassword","payload","email","password","console","log","onEmailAndPasswordSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,oBAA/B,QAA2D,+BAA3D;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,EAAkDC,iBAAlD,EAAqEC,kBAArE,QAA+F,gBAA/F;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAEhC,MAAI;AAAA,iBAEiB,MAAMR,IAAI,CAACS,eAAL,CAAqBV,cAArB,CAFvB;AAAA,UAEQW,IAFR,QAEQA,IAFR;;AAIA,UAAMC,OAAO,GAAG,MAAMJ,IAAI,CAACN,oBAAD,EAAuBS,IAAvB,CAA1B;AAEA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMhB,GAAG,CAACM,kBAAkB;AACxBW,MAAAA,EAAE,EAAEF,YAAY,CAACE;AADO,OAErBF,YAAY,CAACG,IAAb,EAFqB,EAAnB,CAAT;AAKH,GAbD,CAaE,OAAOC,GAAP,EAAY;AACVnB,IAAAA,GAAG,CAACK,mBAAmB,CAACc,GAAD,CAApB,CAAH;AACH;AAEJ;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMrB,UAAU,CAACE,eAAe,CAACoB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUW,0BAAV,CAAqC;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAArC,EAAuE;AAC1E,QAAMC,OAAO,CAACC,GAAR,CAAYJ,OAAZ,CAAN;;AAEA,MAAI;AAAA,kBACiB,MAAMpB,IAAI,CAACmB,0BAAL,CAAgCE,KAAhC,EAAuCC,QAAvC,CADvB;AAAA,UACQZ,IADR,SACQA,IADR;;AAGA,UAAMC,OAAO,GAAG,MAAMJ,IAAI,CAACN,oBAAD,EAAuBS,IAAvB,CAA1B;AAEA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMhB,GAAG,CAACO,iBAAiB;AACvBU,MAAAA,EAAE,EAAEF,YAAY,CAACE;AADM,OAEpBF,YAAY,CAACG,IAAb,EAFoB,EAAlB,CAAT;AAKH,GAZD,CAYE,OAAOC,GAAP,EAAY;AACVnB,IAAAA,GAAG,CAACQ,kBAAkB,CAACW,GAAD,CAAnB,CAAH;AACH;AACJ;AAED,OAAO,UAAUS,6BAAV,GAA0C;AAC7C,QAAM7B,UAAU,CAACE,eAAe,CAAC4B,mBAAjB,EAAsCP,0BAAtC,CAAhB;AACH;AAGD,OAAO,UAAUQ,SAAV,GAAsB;AACzB,QAAMrB,GAAG,CAAC,CACNC,IAAI,CAACU,mBAAD,CADE,EAENV,IAAI,CAACkB,6BAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { takeLatest, put } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDoc } from '../../firebase/firebase.utils';\nimport { googleSignInFailure, googleSignInSucces, emailSignInSucces, emailSignInFailure } from './user.actions';\nimport { all, call } from 'redux-saga/effects';\n\nexport function* signInWithGoogle() {\n\n    try {\n\n        const { user } = yield auth.signInWithPopup(googleProvider);\n\n        const userRef = yield call(createUserProfileDoc, user)\n\n        const userSnapshot = yield userRef.get();\n\n        yield put(googleSignInSucces({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }));\n\n    } catch (err) {\n        put(googleSignInFailure(err))\n    }\n\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* signInWithEmailAndPassword({ payload: { email, password } }) {\n    yield console.log(payload)\n\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n\n        const userRef = yield call(createUserProfileDoc, user)\n\n        const userSnapshot = yield userRef.get();\n\n        yield put(emailSignInSucces({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }));\n\n    } catch (err) {\n        put(emailSignInFailure(err))\n    }\n}\n\nexport function* onEmailAndPasswordSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmailAndPassword)\n}\n\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailAndPasswordSignInStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}