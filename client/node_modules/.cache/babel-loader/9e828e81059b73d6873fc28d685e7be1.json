{"ast":null,"code":"import _defineProperty from \"/home/mat/Projects/react-apps/reacte-commerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDC2pMoRcsGm5VAKwZEQq430WlJo4ufujw\",\n  authDomain: \"kanban-fa15b.firebaseapp.com\",\n  databaseURL: \"https://kanban-fa15b.firebaseio.com\",\n  projectId: \"kanban-fa15b\",\n  storageBucket: \"kanban-fa15b.appspot.com\",\n  messagingSenderId: \"933576098\",\n  appId: \"1:933576098:web:5156290aaee585dafd86fb\"\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const createUserProfileDoc = async (user, data) => {\n  if (!user) return;\n  const userRef = firestore.doc(\"users/\".concat(user.uid));\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exist) {\n    const displayName = user.displayName,\n          email = user.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, data));\n    } catch (err) {\n      console.error('Error creating user.', err);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","firestore","collection","batch","forEach","obj","newDocRef","doc","set","commit","createUserProfileDoc","user","data","userRef","uid","snapshot","get","exist","displayName","email","createdAt","Date","err","console","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,8BAFD;AAGXC,EAAAA,WAAW,EAAE,qCAHF;AAIXC,EAAAA,SAAS,EAAE,cAJA;AAKXC,EAAAA,aAAa,EAAE,0BALJ;AAMXC,EAAAA,iBAAiB,EAAE,WANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,YAAtB,KAAuC;AAC5E,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqBJ,aAArB,CAAtB;AAEA,QAAMK,KAAK,GAAGF,SAAS,CAACE,KAAV,EAAd;AACAJ,EAAAA,YAAY,CAACK,OAAb,CAAqBC,GAAG,IAAI;AACxB,UAAMC,SAAS,GAAGN,aAAa,CAACO,GAAd,EAAlB;AACAJ,IAAAA,KAAK,CAACK,GAAN,CAAUF,SAAV,EAAqBD,GAArB;AACH,GAHD;AAKA,SAAO,MAAMF,KAAK,CAACM,MAAN,EAAb;AACH,CAVM;AAYP,OAAO,MAAMC,oBAAoB,GAAG,OAAOC,IAAP,EAAaC,IAAb,KAAsB;AACtD,MAAI,CAACD,IAAL,EAAW;AAEX,QAAME,OAAO,GAAGZ,SAAS,CAACM,GAAV,iBAAuBI,IAAI,CAACG,GAA5B,EAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACG,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,KAAd,EAAqB;AAAA,UACTC,WADS,GACcP,IADd,CACTO,WADS;AAAA,UACIC,KADJ,GACcR,IADd,CACIQ,KADJ;AAEjB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMR,OAAO,CAACL,GAAR;AAAcU,QAAAA,WAAd;AAA2BC,QAAAA,KAA3B;AAAkCC,QAAAA;AAAlC,SAAgDR,IAAhD,EAAN;AACH,KAFD,CAEE,OAAOU,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAsCF,GAAtC;AACH;AACJ;;AAED,SAAOT,OAAP;AAEH,CAnBM;AAqBPzB,QAAQ,CAACqC,aAAT,CAAuBpC,MAAvB;AAEA,OAAO,MAAMqC,IAAI,GAAGtC,QAAQ,CAACsC,IAAT,EAAb;AACP,OAAO,MAAMzB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAM0B,QAAQ,GAAG,IAAIvC,QAAQ,CAACsC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAevC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyDC2pMoRcsGm5VAKwZEQq430WlJo4ufujw\",\n    authDomain: \"kanban-fa15b.firebaseapp.com\",\n    databaseURL: \"https://kanban-fa15b.firebaseio.com\",\n    projectId: \"kanban-fa15b\",\n    storageBucket: \"kanban-fa15b.appspot.com\",\n    messagingSenderId: \"933576098\",\n    appId: \"1:933576098:web:5156290aaee585dafd86fb\"\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n\n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, obj)\n    });\n\n    return await batch.commit();\n}\n\nexport const createUserProfileDoc = async (user, data) => {\n    if (!user) return;\n\n    const userRef = firestore.doc(`users/${user.uid}`)\n    const snapshot = await userRef.get();\n\n    if (!snapshot.exist) {\n        const { displayName, email } = user;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({ displayName, email, createdAt, ...data })\n        } catch (err) {\n            console.error('Error creating user.', err);\n        }\n    }\n\n    return userRef;\n\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}