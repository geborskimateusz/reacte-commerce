{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/mat/Projects/react-apps/reacte-commerce/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  min-width: 165px;\\n  width: auto;\\n  height: 50px;\\n  letter-spacing: 0.5px;\\n  line-height: 50px;\\n  padding: 0 35px 0 35px;\\n  margin: 1%;\\n  font-size: 15px;\\n  background-color: black;\\n  color: white;\\n  text-transform: uppercase;\\n  font-family: \\\"Open Sans Condensed\\\";\\n  font-weight: bolder;\\n  border: none;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n\\n  \", \"\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: white;\\n  color: black;\\n  border: 1px solid black;\\n\\n  &:hover {\\n    background-color: black;\\n    color: white;\\n    border: none;\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: #4285f4;\\n  color: white;\\n\\n  &:hover {\\n    background-color: #357ae8;\\n    border: none;\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: black;\\n  color: white;\\n\\n  &:hover {\\n    background-color: white;\\n    color: black;\\n    border: 1px solid black;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled, { css } from \"styled-components\";\nconst ButtonStyles = css(_templateObject());\nconst GoogleSignInStyles = css(_templateObject2());\nconst InvertedStyles = css(_templateObject3());\n\nconst getButtonStyles = props => {\n  if (props.isGoogleSignIn) {\n    return GoogleSignInStyles;\n  }\n\n  return props.inverted ? InvertedStyles : ButtonStyles;\n};\n\nexport const ButtonContainer = styled.button(_templateObject4(), getButtonStyles);","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/components/button/button.styles.jsx"],"names":["styled","css","ButtonStyles","GoogleSignInStyles","InvertedStyles","getButtonStyles","props","isGoogleSignIn","inverted","ButtonContainer","button"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,MAAMC,YAAY,GAAGD,GAAH,mBAAlB;AAWA,MAAME,kBAAkB,GAAGF,GAAH,oBAAxB;AAUA,MAAMG,cAAc,GAAGH,GAAH,oBAApB;;AAYA,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,MAAIA,KAAK,CAACC,cAAV,EAA0B;AACxB,WAAOJ,kBAAP;AACD;;AAED,SAAOG,KAAK,CAACE,QAAN,GAAiBJ,cAAjB,GAAkCF,YAAzC;AACD,CAND;;AAQA,OAAO,MAAMO,eAAe,GAAGT,MAAM,CAACU,MAAV,qBAmBxBL,eAnBwB,CAArB","sourcesContent":["import styled, { css } from \"styled-components\";\n\nconst ButtonStyles = css`\n  background-color: black;\n  color: white;\n\n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n`;\n\nconst GoogleSignInStyles = css`\n  background-color: #4285f4;\n  color: white;\n\n  &:hover {\n    background-color: #357ae8;\n    border: none;\n  }\n`;\n\nconst InvertedStyles = css`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;\n\nconst getButtonStyles = props => {\n  if (props.isGoogleSignIn) {\n    return GoogleSignInStyles;\n  }\n\n  return props.inverted ? InvertedStyles : ButtonStyles;\n};\n\nexport const ButtonContainer = styled.button`\n  min-width: 165px;\n  width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  margin: 1%;\n  font-size: 15px;\n  background-color: black;\n  color: white;\n  text-transform: uppercase;\n  font-family: \"Open Sans Condensed\";\n  font-weight: bolder;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n\n  ${getButtonStyles}\n`;\n"]},"metadata":{},"sourceType":"module"}