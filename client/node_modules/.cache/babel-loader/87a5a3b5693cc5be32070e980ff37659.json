{"ast":null,"code":"var _jsxFileName = \"/home/mat/Projects/react-apps/reacte-commerce/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from 'react-redux';\nimport { setCollections } from '../../redux/shop/shop.actions';\nimport { firestore } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const setCollections = this.props.setCollections;\n    const docRef = firestore.collection(\"collections\");\n    docRef.get().then(function (doc) {\n      if (doc.exists) {\n        console.log(\"Document data:\", doc.data());\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:routeName\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCollections: collections => dispatch(setCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","createStructuredSelector","connect","setCollections","firestore","ShopPage","Component","constructor","props","componentDidMount","docRef","collection","get","then","doc","exists","console","log","data","catch","error","render","match","path","mapDispatchToProps","dispatch","collections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,cAAR,QAA6B,+BAA7B;AACA,SAAQC,SAAR,QAAwB,+BAAxB;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAAA,UACXN,cADW,GACO,KAAKK,KADZ,CACXL,cADW;AAGlB,UAAMO,MAAM,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAf;AAEAD,IAAAA,MAAM,CAACE,GAAP,GAAaC,IAAb,CAAkB,UAASC,GAAT,EAAc;AAC9B,UAAIA,GAAG,CAACC,MAAR,EAAgB;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,GAAG,CAACI,IAAJ,EAA9B;AACD,OAFD,MAEO;AACL;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACA,KAPD,EAOGE,KAPH,CAOS,UAASC,KAAT,EAAgB;AACvBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCG,KAAvC;AACC,KATH;AAWD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKd,KADhB,CACCc,KADD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEzB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKwB,KAAK,CAACC,IAAX,gBAAX;AAAyC,MAAA,SAAS,EAAEvB,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAhCoC;;AAoCvC,MAAMwB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCtB,EAAAA,cAAc,EAAEuB,WAAW,IAAID,QAAQ,CAACtB,cAAc,CAACuB,WAAD,CAAf;AADD,CAAL,CAAnC;;AAIA,eAAexB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCnB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from 'react-redux';\nimport {setCollections} from '../../redux/shop/shop.actions';\nimport {firestore} from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const {setCollections} = this.props;\n\n    const docRef = firestore.collection(\"collections\");\n\n    docRef.get().then(function(doc) {\n      if (doc.exists) {\n        console.log(\"Document data:\", doc.data());\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n    }\n    }).catch(function(error) {\n      console.log(\"Error getting document:\", error);\n      });\n\n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:routeName`} component={CollectionPage} />\n      </div>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n  setCollections: collections => dispatch(setCollections(collections))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}