{"ast":null,"code":"var _jsxFileName = \"/home/mat/Projects/react-apps/reacte-commerce/client/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  // Stripe requires sets ( price * 100)\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_sLYbw1LaBaJ5Btl59fmoZZks00E4ODxOGH\";\n\n  const onToken = async token => {\n    console.log(token);\n\n    try {\n      async function postData(url = \"\", data = {}) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: \"POST\",\n          // *GET, POST, PUT, DELETE, etc.\n          // mode: 'cors', // no-cors, *cors, same-origin\n          // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          // credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n          },\n          // redirect: 'follow', // manual, *follow, error\n          // referrer: 'no-referrer', // no-referrer, *client\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n        });\n        return await response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      const data = await postData(\"http://localhost:5000/payment\", {\n        source: token.id,\n        amount: priceForStripe\n      });\n      console.log(JSON.stringify(data)); // JSON-string from `response.json()` call\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return React.createElement(StripeCheckout, {\n    name: \"reacte-commerce Co.\",\n    description: \"Your total is $\".concat(price),\n    image: \"https://svgshare.com/i/CUz.svg\",\n    label: \"ORDER NOW\",\n    panelLabel: \"ORDER NOW\",\n    shippingAddress: true,\n    billingAddress: true,\n    amount: priceForStripe,\n    stripeKey: publishableKey,\n    token: onToken,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  });\n};\n\nexport default StripeCheckoutButton;","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","console","log","postData","url","data","response","fetch","method","headers","body","JSON","stringify","json","source","id","amount","err","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1C;AACA,QAAMC,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAG,MAAMC,KAAN,IAAe;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,QAAI;AACF,qBAAeG,QAAf,CAAwBC,GAAG,GAAG,EAA9B,EAAkCC,IAAI,GAAG,EAAzC,EAA6C;AAC3C;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAChCI,UAAAA,MAAM,EAAE,MADwB;AAChB;AAChB;AACA;AACA;AACAC,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT,CAEP;;AAFO,WALuB;AAShC;AACA;AACAC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAX0B,CAWL;;AAXK,SAAN,CAA5B;AAaA,eAAO,MAAMC,QAAQ,CAACO,IAAT,EAAb,CAf2C,CAeb;AAC/B;;AAED,YAAMR,IAAI,GAAG,MAAMF,QAAQ,CAAC,+BAAD,EAAkC;AAC3DW,QAAAA,MAAM,EAAEd,KAAK,CAACe,EAD6C;AAE3DC,QAAAA,MAAM,EAAEnB;AAFmD,OAAlC,CAA3B;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAZ,EAvBE,CAuBiC;AACpC,KAxBD,CAwBE,OAAOY,GAAP,EAAY;AACZhB,MAAAA,OAAO,CAACiB,KAAR,CAAcD,GAAd;AACD;AACF,GA9BD;;AAgCA,SACE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAC,qBADP;AAEE,IAAA,WAAW,2BAAoBrB,KAApB,CAFb;AAGE,IAAA,KAAK,EAAC,gCAHR;AAIE,IAAA,KAAK,EAAC,WAJR;AAKE,IAAA,UAAU,EAAC,WALb;AAME,IAAA,eAAe,MANjB;AAOE,IAAA,cAAc,MAPhB;AAQE,IAAA,MAAM,EAAEC,cARV;AASE,IAAA,SAAS,EAAEC,cATb;AAUE,IAAA,KAAK,EAAEC,OAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CAnDD;;AAqDA,eAAeJ,oBAAf","sourcesContent":["import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  // Stripe requires sets ( price * 100)\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_sLYbw1LaBaJ5Btl59fmoZZks00E4ODxOGH\";\n\n  const onToken = async token => {\n    console.log(token);\n\n    try {\n      async function postData(url = \"\", data = {}) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n          // mode: 'cors', // no-cors, *cors, same-origin\n          // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          // credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            \"Content-Type\": \"application/json\"\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          // redirect: 'follow', // manual, *follow, error\n          // referrer: 'no-referrer', // no-referrer, *client\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        return await response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      const data = await postData(\"http://localhost:5000/payment\", {\n        source: token.id,\n        amount: priceForStripe\n      });\n      console.log(JSON.stringify(data)); // JSON-string from `response.json()` call\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <StripeCheckout\n      name=\"reacte-commerce Co.\"\n      description={`Your total is $${price}`}\n      image=\"https://svgshare.com/i/CUz.svg\"\n      label=\"ORDER NOW\"\n      panelLabel=\"ORDER NOW\"\n      shippingAddress\n      billingAddress\n      amount={priceForStripe}\n      stripeKey={publishableKey}\n      token={onToken}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n"]},"metadata":{},"sourceType":"module"}