{"ast":null,"code":"import _defineProperty from \"/home/mat/Projects/react-apps/reacte-commerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDoc } from '../../firebase/firebase.utils';\nimport { googleSignInFailure, googleSignInSucces } from './user.actions';\nimport { all, call } from 'redux-saga/effects';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDoc, user);\n    const snap = yield userRef.get();\n    yield put(googleSignInSucces(_objectSpread({\n      id: snap.id\n    }, snap.data())));\n  } catch (err) {\n    put(googleSignInFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","UserActionTypes","googleProvider","auth","createUserProfileDoc","googleSignInFailure","googleSignInSucces","all","call","signInWithGoogle","signInWithPopup","user","userRef","snap","get","id","data","err","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,oBAA/B,QAA2D,+BAA3D;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,gBAAxD;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAEhC,MAAI;AAAA,iBAEiB,MAAMN,IAAI,CAACO,eAAL,CAAqBR,cAArB,CAFvB;AAAA,UAEQS,IAFR,QAEQA,IAFR;;AAIA,UAAMC,OAAO,GAAG,MAAMJ,IAAI,CAACJ,oBAAD,EAAuBO,IAAvB,CAA1B;AAEA,UAAME,IAAI,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAnB;AAEA,UAAMd,GAAG,CAACM,kBAAkB;AACxBS,MAAAA,EAAE,EAAEF,IAAI,CAACE;AADe,OAErBF,IAAI,CAACG,IAAL,EAFqB,EAAnB,CAAT;AAKH,GAbD,CAaE,OAAOC,GAAP,EAAY;AACVjB,IAAAA,GAAG,CAACK,mBAAmB,CAACY,GAAD,CAApB,CAAH;AACH;AAEJ;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMnB,UAAU,CAACE,eAAe,CAACkB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUW,SAAV,GAAsB;AACzB,QAAMb,GAAG,CAAC,CACNC,IAAI,CAACU,mBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { takeLatest, put } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDoc } from '../../firebase/firebase.utils';\nimport { googleSignInFailure, googleSignInSucces } from './user.actions';\nimport { all, call } from 'redux-saga/effects';\n\nexport function* signInWithGoogle() {\n\n    try {\n\n        const { user } = yield auth.signInWithPopup(googleProvider);\n\n        const userRef = yield call(createUserProfileDoc, user)\n\n        const snap = yield userRef.get();\n\n        yield put(googleSignInSucces({\n            id: snap.id,\n            ...snap.data()\n        }));\n\n    } catch (err) {\n        put(googleSignInFailure(err))\n    }\n\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}