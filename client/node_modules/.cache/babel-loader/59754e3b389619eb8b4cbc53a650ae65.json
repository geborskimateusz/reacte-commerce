{"ast":null,"code":"var _jsxFileName = \"/home/mat/Projects/react-apps/reacte-commerce/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { connect } from \"react-redux\";\nimport { setCollections } from \"../../redux/shop/shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const setCollections = this.props.setCollections;\n    const collectionsRef = firestore.collection(\"collections\");\n    this.unsubscribeFromSnapshot = collectionsRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      setCollections(collectionsMap);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot();\n  }\n\n  render() {\n    const match = this.props.match;\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:routeName\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCollections: collections => dispatch(setCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/mat/Projects/react-apps/reacte-commerce/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","connect","setCollections","firestore","convertCollectionsSnapshotToMap","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","isLoading","unsubscribeFromSnapshot","componentDidMount","props","collectionsRef","collection","get","then","snapshot","collectionsMap","setState","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch","collections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACP,mBAAD,CAAlD;AACA,MAAMS,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,SAAS,EAAE;AADL,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVX,cADU,GACS,KAAKY,KADd,CACVZ,cADU;AAGlB,UAAMa,cAAc,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAvB;AAEA,SAAKJ,uBAAL,GAA+BG,cAAc,CAACE,GAAf,GAAqBC,IAArB,CAA0BC,QAAQ,IAAI;AACnE,YAAMC,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AAEAjB,MAAAA,cAAc,CAACkB,cAAD,CAAd;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAL8B,CAA/B;AAMD;;AAEDW,EAAAA,oBAAoB,GAAG;AACrB,SAAKV,uBAAL;AACD;;AAEDW,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKV,KADhB,CACCU,KADD;AAAA,UAECb,SAFD,GAEe,KAAKD,KAFpB,CAECC,SAFD;AAIP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKa,KAAK,CAACC,IAAX,CAFN;AAGE,MAAA,MAAM,EAAEX,KAAK,IACX,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAA0DG,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKU,KAAK,CAACC,IAAX,gBADN;AAEE,MAAA,MAAM,EAAEX,KAAK,IACX,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAqDG,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AA7CoC;;AAgDvC,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtCzB,EAAAA,cAAc,EAAE0B,WAAW,IAAID,QAAQ,CAACzB,cAAc,CAAC0B,WAAD,CAAf;AADD,CAAL,CAAnC;;AAIA,eAAe3B,OAAO,CACpB,IADoB,EAEpByB,kBAFoB,CAAP,CAGblB,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { connect } from \"react-redux\";\nimport { setCollections } from \"../../redux/shop/shop.actions\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  state = {\n    isLoading: true\n  };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { setCollections } = this.props;\n\n    const collectionsRef = firestore.collection(\"collections\");\n\n    this.unsubscribeFromSnapshot = collectionsRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\n      setCollections(collectionsMap);\n      this.setState({ isLoading: false });\n    });\n  }\n  \n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot();\n  }\n\n  render() {\n    const { match } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionsOverviewWithSpinner isLoading={isLoading} {...props} />\n          )}\n        />\n        <Route\n          path={`${match.path}/:routeName`}\n          render={props => (\n            <CollectionPageWithSpinner isLoading={isLoading} {...props} />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCollections: collections => dispatch(setCollections(collections))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}